#!/bin/bash

set -e

file="$1"

[ -f "DPTBUILD" ] && [ -z "$1" ] && {
  file="$PWD/DPTBUILD"
}

[ -n "$1" ] || [ -f "DPTBUILD" ] || {
  echo "Please specify a DPTBUILD file"
  exit 1
}

[ -f "$file" ] || {
  echo "File $file does not exist!"
  exit 1
}

set -u

file="$(readlink -f "$file")"

source "$file"

pkgdir="$(mktemp -d)"
tmp_dir="$(mktemp -d)"
oldpwd="$(pwd)"
mkdir -p "$pkgdir"

trap 'exit_handling' EXIT

function exit_handling() {
  # error handling goes here
  [ -n "$pkgdir" ] && rm -rf "$pkgdir"
  [ -n "$tmp_dir" ] && rm -rf "$tmp_dir"
}

cd "$tmp_dir"

for x in "${sources[@]}"; do
  wget -q --show-progress "$x"
  tar -xf "${x##*/}" &>/dev/null || true
done

if [[ -v USE_HOST_TOOLS ]]; then
  build
else
  default_package_list="bash coreutils"
  if [[ -v NO_DEFAULT_PACKAGES ]]; then
    default_package_list=""
  fi
  custom_cmd=()
  if [[ -v CUSTOM_CMD ]]; then
    custom_cmd=("--cmd" "$CUSTOM_CMD")
  fi
  dpt dev-env $default_package_list "${makedepends[@]}" "${custom_cmd[@]}" <<EOF
set -e
set -u

source "$file"
pkgdir="$pkgdir"
oldpwd="$oldpwd"

build
EOF
fi
cd "$oldpwd"

# Now the package is installed to pkgdir

function deps_to_string() {
  for x in "${depends[@]}"; do
    name="$(echo -n "$x" | grep -E -o '^[^>=]+')"
    version="$({ echo -n "$x" | grep -P -o "(?<=$name).*"; } || true)"
    echo "depends \"${name}\" $(if [ -n "$version" ]; then echo "version=\"$version\""; fi)"
  done
}

mkdir -p "$pkgdir/dpt"
cat <<EOF >"$pkgdir/dpt/pkg.kdl"
name "$pkgname"
version "$pkgver"

$(deps_to_string)
EOF

echo "----------------------"
cat "$pkgdir/dpt/pkg.kdl"
echo "----------------------"

dpt gen-pkg "$pkgdir" "$pkgname-$pkgver.dpt"
exit 0
