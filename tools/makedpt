#!/bin/bash

set -e

file="$1"

[ -f "DPTBUILD" ] && [ -z "$1" ] && {
  file="$PWD/DPTBUILD"
}

[ -n "$1" ] || [ -f "DPTBUILD" ] || {
  echo "Please specify a DPTBUILD file"
  exit 1
}

[ -f "$file" ] || {
  echo "File $file does not exist!"
  exit 1
}

set -u

file="$(readlink -f "$file")"

source "$file"

tmp_dir="$(mktemp -d)"
oldpwd="$(pwd)"

trap 'exit_handling' EXIT

function exit_handling() {
  # error handling goes here
  [ -n "$pkgdir" ] && rm -rf "$pkgdir"
  [ -n "$tmp_dir" ] && rm -rf "$tmp_dir"
}

function deps_to_string_() {
  for x in "${depends_variable[@]}"; do
    name="$(echo -n "$x" | grep -E -o '^[^>=]+')"
    version="$({ echo -n "$x" | grep -P -o "(?<=$name).*" | sed 's/==//g'; } || true)"
    echo "depends \"${name}\" $(if [ -n "$version" ]; then echo "version=\"$version\""; fi)"
  done
}

function deps_to_string() {
  depends_variable=("${depends[@]}")
  deps_to_string_
}

cd "$tmp_dir"

for x in "${sources[@]}"; do
  wget -q --show-progress "$x"
  tar -xf "${x##*/}" &>/dev/null || true
done

if [[ -v USE_HOST_TOOLS ]]; then
  pkgdir="$(mktemp -d)"
  build
  mkdir -p $pkgdir/dpt
  cat <<EOF >$pkgdir/dpt/pkg.kdl
name "$pkgname"
version "$pkgver"

$(deps_to_string)
EOF
  dpt gen-pkg "$pkgdir" "$oldpwd/$pkgname-$pkgver.dpt"
  rm -rf "$pkgdir"
else
  default_package_list="bash coreutils"

  if declare -p pkgname 2>/dev/null | grep -q '^declare -a'; then
    for x in "${pkgname[@]}"; do
      pkgdir="$(mktemp -d)"
      formated_x="$(echo -n "$x" | tr '-' '_')"
      typeset -n tmp_x_ver="pkgver_${formated_x}"
      typeset -n tmp_x_deps="depends_${formated_x}"

      if [[ -v depends_${formated_x} ]]; then
        depends_variable=("${tmp_x_deps[@]}")
      else
        depends_variable=("${depends[@]}")
      fi

      if [[ -v pkgver_${formated_x} ]]; then
        computed_version="${tmp_x_ver}"
      else
        computed_version="$pkgver"
      fi

      dpt dev-env $default_package_list "${makedepends[@]}" <<EOF
set -e
set -u

source "$file"
pkgdir="$pkgdir"
oldpwd="$oldpwd"

build_$x
EOF

      mkdir -p $pkgdir/dpt
      cat <<EOF >$pkgdir/dpt/pkg.kdl
name "$x"
version "$computed_version"

$(deps_to_string_)
EOF
      dpt gen-pkg "$pkgdir" "$oldpwd/$x-$computed_version.dpt"
      rm -rf "$pkgdir"
    done
  else
    pkgdir="$(mktemp -d)"
    dpt dev-env $default_package_list "${makedepends[@]}" <<EOF
set -e
set -u

source "$file"
pkgdir="$pkgdir"
oldpwd="$oldpwd"

build
EOF

    mkdir -p $pkgdir/dpt
    cat <<EOF >$pkgdir/dpt/pkg.kdl
name "$pkgname"
version "$pkgver"

$(deps_to_string)
EOF
    dpt gen-pkg "$pkgdir" "$oldpwd/$pkgname-$pkgver.dpt"
    rm -rf "$pkgdir"
  fi
fi
cd "$oldpwd"
rm -rf "$tmp_dir"
exit 0
